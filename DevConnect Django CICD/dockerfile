# # Use an official Python runtime as a parent image
# FROM python:3.9-slim

# # Set environment variables for Django
# ENV PYTHONUNBUFFERED 1

# # Create and set the working directory
# WORKDIR /app

# # Copy your Django project files into the container
# COPY . /app

# # Install required Python modules, including Django, and skip SSL certificate checks
# #RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org django
# RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host -r requirements.txt

# # Expose the port the application will run on
# EXPOSE 8000

# # Start the Django application
# #CMD ["python", "django_web_app/manage.py", "runserver", "0.0.0.0:8000"]
# #CMD ["python", "django_web_app/manage.py", "makemigrations"]
# #CMD ["python", "django_web_app/manage.py", "migrate"]
# CMD ["python", "django_web_app/manage.py", "makemigrations", "&&", "python", "django_web_app/manage.py", "migrate", "&&", "python", "django_web_app/manage.py", "runserver", "0.0.0.0:8000"]

# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install dependencies
RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org -r requirements.txt
# Run the application when the container starts
CMD ["python", "django_web_app/manage.py", "runserver", "0.0.0.0:8000"]





# #-------------------------------- Build stage -----------------------------------------
# FROM python:3.9-slim as build

# # Set environment variables
# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1

# # Set the working directory in the build container
# WORKDIR /app

# # Copy only the requirements file and install dependencies first to benefit from caching
# COPY requirements.txt /app/
# RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org -r requirements.txt

# # --------------------------- Runtime stage ---------------------------------------------
# FROM python:3.9-slim

# # Set environment variables
# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1

# # Set the working directory in the container
# WORKDIR /app

# # Copy the application code from the build stage
# COPY --from=build /app /app

# # Run the application when the container starts
# CMD ["python", "django_web_app/manage.py", "runserver", "0.0.0.0:8000"]

